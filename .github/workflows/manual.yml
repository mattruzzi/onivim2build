# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches: [ master ]
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Cache
      uses: actions/cache@v2.1.7
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: ~/.esy
        # An explicit key for restoring and saving the cache
        key: esy-cache
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
#         restore-keys: # optional
        # The chunk size used to split up large files during upload, in bytes
#         upload-chunk-size: # optional
        # Runs a single command using the runners shell
    - name: Send greeting
      run: |
          # Clone the Oni2 repo
          git clone https://github.com/onivim/oni2
          cd oni2

          # Use our included script to setup a docker container
          docker build --network=host -t centos scripts/docker/centos

          # Now use that container to actually build an Oni2 AppImage.
          # Bind the Oni2 folder to the volume so that it can access the source.
          # We also bind ~/.esy such that the build steps are cached locally.
          # This means subsequent builds are fast.
          # You can clean that folder out to save space at the cost of build time for future
          # builds.
          docker container run --rm \
              --name centos \
              --network=host \
              --volume `pwd`:/oni2 \
              --volume ~/.esy:/esy/store \
              --cap-add SYS_ADMIN \
              --device /dev/fuse \
              --security-opt apparmor:unconfined \
              centos \
              /bin/bash -c 'cd oni2 && ./scripts/docker-build.sh'

          # Wait 30-40 minutes on an average machine...
          # This takes up to about an hour on CI though, so may be worth
          # leaving for a bit!
          # During the initial esy steps, there isn't much output, so you
          # may end up waiting on `info fetching: done`. It will eventually
          # finish the initial install and move on to building, which has output.

          # Done!
          # This should drop an AppImage binary off in _release in the Oni2
          # folder.

          # You can run a health check if you would like...
          #_release/Onivim2.AppDir/usr/bin/Oni2 -f --no-log-colors --checkhealth
    - name: Upload  Build
      uses: actions/upload-artifact@v2
      with:
         name: Oni2
         path: /home/runner/work/onivim2build/onivim2build/oni2/_release/Onivim2.AppDir/
